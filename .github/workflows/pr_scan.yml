name: Snyk Scan

on:
  pull_request:
    branches:
      - master_1

jobs:
  snyk-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Snyk CLI
        run: npm install -g snyk

      - name: Authenticate with Snyk
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      - name: Fetch ignored issues from snyk project
        run: |
          PROJECT_ID="491d9894-c158-4a71-8a53-7b1101c1f535"
          set +x
          curl https://api.snyk.io/v1/org/arctiq-nfr-shared/project/${PROJECT_ID}/ignores \
              -H "Accept: application/json" \
              -H "Authorization: token ${{ secrets.SNYK_TOKEN }}" >ignores.json
          set -x
          IGNORES=$(jq 'to_entries[] | .key' ignores.json)

          rm -rf .snyk

          for ISSUE in $IGNORES; do
              ID=$(echo "$ISSUE" | tr -d '"')
              snyk ignore --id=$ID --expiry=2023-09-28T14:46:49.015Z --reason="We will fix this some day..."
          done

      - name: Run Snyk scan
        id: snyk-scan
        run: |
          cat .snyk
          snyk iac test > snyk_report.txt || true

      - name: Read Snyk IaC report file
        id: read-snyk-report
        run: |
          report_contents=$(cat snyk_report.txt)
          echo "::set-output name=report-contents::$report_contents"

      - name: Check Medium Severity Issues
        id: check-medium-issues
        run: |
          number=$(grep -o 'Medium Severity Issues: [0-9]\+' snyk_report.txt | grep -o '[0-9]\+' || 0)
          echo "::set-output name=number::$number"

      - name: Upload Snyk scan report
        uses: actions/upload-artifact@v2
        with:
          name: snyk-report
          path: snyk_report.txt

      - name: Install Azure CLI
        run: npm install -g azure-cli

      - name: Open Azure DevOps Ticket
        if: steps.check-medium-issues.outputs.number == '3'
        run: |
          az config set extension.use_dynamic_install=yes_without_prompt
          az extension add --name azure-devops
          echo ${{ secrets.PAT_AZURE }} | az devops login --organization "https://dev.azure.com/markvolfson/"
          description=$(cat snyk_report.txt)
          az devops configure --defaults organization=https://dev.azure.com/markvolfson/ project=appsec-demo
          az boards work-item create --title "PR Failed - Snyk Results" --type "Task" --description "$description"

      - name: Quality Gate
        id: quality-gate
        if: steps.check-medium-issues.outputs.number == '3'
        run: |
          failure("Code contains security vulnerabilities")
