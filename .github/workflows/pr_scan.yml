name: Snyk Scan

on:
  workflow_dispatch:

jobs:
  snyk-scan:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Snyk CLI
        run: npm install -g snyk

      - name: Authenticate with Snyk
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      - name: Run Snyk scan
        id: snyk-scan
        run: |
          snyk iac test > snyk_report.txt || true

      - name: Read Snyk IaC report file
        id: read-snyk-report
        run: |
          report_contents=$(cat snyk_report.txt)
          echo "::set-output name=report-contents::$report_contents"

      - name: Create Azure DevOps Task with Snyk IaC report description
        run: |
          # Extracting information from report-contents output
          summary="PR Failed - Snyk Scan Results"
          description=$(echo "${{ steps.read-snyk-report.outputs.report-contents }}")
          azureDevOpsUrl="POST https://dev.azure.com/markvolfson/appsec-demo/_apis/wit/workitems/${type}?api-version=7.0"

          # Create Azure DevOps Task payload
          payload="{\"op\": \"add\", \"path\": \"/fields/System.Title\", \"value\": \"$summary\"}, {\"op\": \"add\", \"path\": \"/fields/System.Description\", \"value\": \"$description\"}"

          # Create Azure DevOps Task
          response=$(curl -s -u $(username):$(password) -H "Content-Type: application/json-patch+json" -d "$payload" "$azureDevOpsUrl")
          echo "Azure DevOps Task created with ID: $(echo $response | jq -r '.id')"

      - name: Upload Snyk scan report
        uses: actions/upload-artifact@v2
        with:
          name: snyk-report
          path: snyk_report.json